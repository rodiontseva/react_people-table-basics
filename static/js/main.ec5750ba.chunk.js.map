{"version":3,"sources":["components/PageNavLink.tsx","components/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","props","to","title","className","isActive","classNames","Navbar","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","selectedPersonSlug","isSelected","map","born","died","mother","motherName","father","fatherName","PeoplePage","useParams","personSlug","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useEffect","catch","finally","peopleWithParents","useMemo","_","arr","find","maybeMother","maybeFather","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ec5750ba.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: FC<Props> = (props) => {\n  const { to, title } = props;\n\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item', { 'has-background-grey-lighter': isActive },\n      )}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import { FC } from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const Navbar: FC = () => (\n  <>\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" title=\"Home\" />\n          <PageNavLink to=\"/people\" title=\"People\" />\n        </div>\n      </div>\n    </nav>\n  </>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person } = props;\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  people: Person [],\n  selectedPersonSlug: string,\n}\n\nexport const PeopleTable: FC<Props> = (props) => {\n  const { people, selectedPersonSlug } = props;\n\n  const isSelected = (person: Person) => person.slug === selectedPersonSlug;\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classNames(\n              { 'has-background-warning': isSelected(person) },\n            )}\n          >\n            <td>\n              <PersonLink person={person} />\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>\n              {person.mother?.name\n                ? <PersonLink person={person.mother} />\n                : person.motherName || '-'}\n            </td>\n            <td>\n              {person.father?.name\n                ? <PersonLink person={person.father} />\n                : person.fatherName || '-'}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Loader } from '../components/Loader';\nimport { PeopleTable } from '../components/PeopleTable';\nimport { Person } from '../types';\n\nexport const PeoplePage = () => {\n  const { personSlug = '' } = useParams();\n  const [people, setPeople] = useState<Person []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const peopleWithParents = useMemo<Person []>(() => (\n    people.map((person, _, arr) => (\n      {\n        ...person,\n        mother: arr.find(maybeMother => maybeMother.name === person.motherName),\n        father: arr.find(maybeFather => maybeFather.name === person.fatherName),\n      }\n    ))\n  ), [people]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {!!people.length && (\n            <PeopleTable\n              people={peopleWithParents}\n              selectedPersonSlug={personSlug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            path=\"*\"\n            element={<h1 className=\"title\">Page not found</h1>}\n          />\n          <Route\n            path=\"/\"\n            element={<h1 className=\"title\">Home Page</h1>}\n          />\n          <Route\n            path=\"home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n          <Route path=\"people\">\n            <Route\n              index\n              element={<PeoplePage />}\n            />\n            <Route\n              path=\":personSlug\"\n              element={<PeoplePage />}\n            />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <App />\n    </HashRouter>,\n  );\n"],"sourceRoot":""}